commit e0922363a7ddab0653e2db4b2db626e7642e45c8
Author: Vinh <lytranvinh.work@gmail.com>
Date:   Thu Mar 20 12:47:22 2025 +0700

    fea:: create password when register

diff --git a/app/src/main/java/com/example/chatapp/activities/UpdatePasswordRegisterActivity.java b/app/src/main/java/com/example/chatapp/activities/UpdatePasswordRegisterActivity.java
index 0f34bb2..5a5d28d 100644
--- a/app/src/main/java/com/example/chatapp/activities/UpdatePasswordRegisterActivity.java
+++ b/app/src/main/java/com/example/chatapp/activities/UpdatePasswordRegisterActivity.java
@@ -8,11 +8,18 @@ import android.widget.Toast;
 import androidx.appcompat.app.AppCompatActivity;
 
 import com.example.chatapp.databinding.SignupBinding;
+import com.example.chatapp.network.HttpClient;
+import com.example.chatapp.utils.Utils;
+import com.google.gson.JsonObject;
+
+import java.util.concurrent.CompletableFuture;
 
 public class UpdatePasswordRegisterActivity extends AppCompatActivity {
 
     private SignupBinding binding;
     private String token;
+    private HttpClient httpClient;
+    private final String TAG = "UpdatePasswordRegisterActivity";
 
     @Override
     protected void onCreate(Bundle savedInstanceState) {
@@ -35,7 +42,7 @@ public class UpdatePasswordRegisterActivity extends AppCompatActivity {
 
     // init variable use
     private void initVariableUse() {
-
+        httpClient = new HttpClient();
     }
 
     private void setListeners() {
@@ -46,42 +53,65 @@ public class UpdatePasswordRegisterActivity extends AppCompatActivity {
     }
 
     // Kiểm tra tính hợp lệ của email và mật khẩu
-//    private Boolean isValidSignUp() {
-//        String email = binding.editTextTextEmailAddress2.getText().toString().trim();
-//        String password = binding.editTextTextPassword2.getText().toString().trim();
-//        String confirmPassword = binding.editTextTextPassword3.getText().toString().trim();
-//
-//        if (email.isEmpty()) {
-//            showToast("Please enter your email");
-//            return false;
-//        } else if (password.isEmpty()) {
-//            showToast("Please enter your password");
-//            return false;
-//        } else if (confirmPassword.isEmpty()) {
-//            showToast("Please confirm your password");
-//            return false;
-//        } else if (!password.equals(confirmPassword)) {
-//            showToast("Password and Confirm Password must match");
-//            return false;
-//        }
-//        return true;
-//    }
+    private Boolean isValidSignUp(String email, String password, String confirmPassword) {
+        if (email.isEmpty()) {
+            showToast("Please enter your email");
+            return false;
+        } else if (password.isEmpty()) {
+            showToast("Please enter your password");
+            return false;
+        } else if (confirmPassword.isEmpty()) {
+            showToast("Please confirm your password");
+            return false;
+        } else if (!password.equals(confirmPassword)) {
+            showToast("Password and Confirm Password must match");
+            return false;
+        }
+        return true;
+    }
 
     // Xử lý đăng ký
     private void signUp() {
         String email = binding.editTextTextEmailAddress2.getText().toString().trim();
         String password = binding.editTextTextPassword2.getText().toString().trim();
+        String password_repeat = binding.editTextTextPassword3.getText().toString().trim();
 
-        showToast("Sign Up Successful!");
+        if (!isValidSignUp(email, password, password_repeat)) {
+            Log.e(TAG, "Input register account when update password is invalid");
+            showToast("Invalid input");
+        }
 
-        Intent intent = new Intent(UpdatePasswordRegisterActivity.this, HomeActivity.class);
-        startActivity(intent);
-        finish();
+        showToast("TODO cmp");
+//        showToast("Sign Up Successful!");
+//
+//        Intent intent = new Intent(UpdatePasswordRegisterActivity.this, HomeActivity.class);
+//        startActivity(intent);
+//        finish();
     }
 
-    // get code otp
-    private void getCodeOtp() {
-
+    // handle req sign up account have password
+    private void handleReqSignUpAccountHavePassword(String password) {
+        CompletableFuture<JsonObject> future = httpClient.createPassword(token, password);
+        future.thenAccept(res -> runOnUiThread(() -> {
+            try {
+                int codeRes = 0;
+                if (res.has("code")) {
+                    codeRes = res.get("code").getAsInt();
+                }
+                if (codeRes != Utils.ErrCodeSuccess) {
+                    // TODO
+                }
+            } catch (Exception e) {
+                Log.e("SignIn", "Error parsing response", e);
+                showToast("Error processing response");
+            }
+        })).exceptionally(e -> {
+            runOnUiThread(() -> {
+                Log.e(TAG, "Create password user failed: ", e);
+                showToast("Network error! Please try again.");
+            });
+            return null;
+        });
     }
 
     private void showToast(String message) {
diff --git a/app/src/main/java/com/example/chatapp/activities/signupv2.java b/app/src/main/java/com/example/chatapp/activities/signupv2.java
index 0c1a751..7468bff 100644
--- a/app/src/main/java/com/example/chatapp/activities/signupv2.java
+++ b/app/src/main/java/com/example/chatapp/activities/signupv2.java
@@ -72,27 +72,33 @@ public class signupv2 extends AppCompatActivity {
     }
 
     private void sendVerificationCode() {
-        // TODO: fix error click sign up lien tiep bi chan
-
-//        tvCodeSent.setVisibility(View.VISIBLE);
-//        btnGetCode.setEnabled(false);
-//        btnGetCode.setBackgroundColor(getResources().getColor(R.color.nav_item_color)); // Đổi màu nút khi bị vô hiệu hóa
-//
-//        countDownTimer = new CountDownTimer(60000, 1000) {
-//            @Override
-//            public void onTick(long millisUntilFinished) {
-//                btnGetCode.setText("Resend in " + millisUntilFinished / 1000 + "s");
-//            }
-//
-//            @Override
-//            public void onFinish() {
-//                btnGetCode.setEnabled(true);
-//                btnGetCode.setText("Get Code");
-//                btnGetCode.setBackgroundColor(getResources().getColor(R.color.primary)); // Trả lại màu ban đầu
-//            }
-//        }.start();
+
         // get email input
         emailInput = ((EditText)findViewById(R.id.editTextTextEmailAddress2)).getText().toString();
+
+        if (emailInput.isEmpty() || emailInput == "") {
+            showToast("Vui long nhap email");
+            return;
+        }
+
+        tvCodeSent.setVisibility(View.VISIBLE);
+        btnGetCode.setEnabled(false);
+        btnGetCode.setBackgroundColor(getResources().getColor(R.color.nav_item_color)); // Đổi màu nút khi bị vô hiệu hóa
+
+        countDownTimer = new CountDownTimer(60000, 1000) {
+            @Override
+            public void onTick(long millisUntilFinished) {
+                btnGetCode.setText("Resend in " + millisUntilFinished / 1000 + "s");
+            }
+
+            @Override
+            public void onFinish() {
+                btnGetCode.setEnabled(true);
+                btnGetCode.setText("Get Code");
+                btnGetCode.setBackgroundColor(getResources().getColor(R.color.primary)); // Trả lại màu ban đầu
+            }
+        }.start();
+
         // send otp and save token in device
         sendOtp();
     }
diff --git a/app/src/main/java/com/example/chatapp/network/HttpClient.java b/app/src/main/java/com/example/chatapp/network/HttpClient.java
index 00b1501..9930ded 100644
--- a/app/src/main/java/com/example/chatapp/network/HttpClient.java
+++ b/app/src/main/java/com/example/chatapp/network/HttpClient.java
@@ -72,7 +72,7 @@ public class HttpClient {
         // Create JSON body for login request
         JsonObject jsonObject = new JsonObject();
         jsonObject.addProperty("verify_key", email);
-        jsonObject.addProperty("verify_purpose", PURPOSE_REGISTER_TEST); // use PURPOSE_REGISTER_TEST -> otp test 123456
+        jsonObject.addProperty("verify_purpose", PURPOSE_REGISTER_PROD); // use PURPOSE_REGISTER_TEST -> otp test 123456
         jsonObject.addProperty("verify_type", 1);
 
         RequestBody body = RequestBody.create(jsonObject.toString(), JSON);
@@ -142,4 +142,10 @@ public class HttpClient {
         return future;
     }
 
+
+    // create password when register
+    public CompletableFuture<JsonObject> createPassword(String token, String password) {
+        // TODO
+        return null;
+    }
 }
