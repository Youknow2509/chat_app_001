{
    "swagger": "2.0",
    "info": {
        "description": "This is a sample server celler server.",
        "title": "API Documentation Chat App",
        "termsOfService": "example.com/be/",
        "contact": {
            "name": "TEAM V",
            "url": "example.com/be/",
            "email": "lytranvinh.work@gmail.com"
        },
        "license": {
            "name": "Apache 2.0",
            "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
        },
        "version": "1.0.0"
    },
    "host": "localhost:8082",
    "basePath": "/",
    "paths": {
        "/v1/chat/add-member-to-chat": {
            "post": {
                "description": "Add member to chat by admin group member",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Chat"
                ],
                "summary": "Add member to chat",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Authorization Bearer token",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    },
                    {
                        "description": "payload",
                        "name": "payload",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/model.AddMemberToChatInput"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.ResponseData"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/response.ErrResponseData"
                        }
                    }
                }
            }
        },
        "/v1/chat/change-admin-group-chat": {
            "post": {
                "description": "Change admin chat status from old admin to new admin",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Chat"
                ],
                "summary": "Change admin chat status",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Authorization Bearer token",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    },
                    {
                        "description": "payload",
                        "name": "payload",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/model.ChangeAdminGroupChatInput"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.ResponseData"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/response.ErrResponseData"
                        }
                    }
                }
            }
        },
        "/v1/chat/create-chat-group": {
            "post": {
                "description": "Create a chat group with user after auth, user create is admin and others users are members",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Chat"
                ],
                "summary": "Create a chat group with user after auth",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Authorization Bearer token",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    },
                    {
                        "description": "payload",
                        "name": "payload",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/model.CreateChatGroupInput"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.ResponseData"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/response.ErrResponseData"
                        }
                    }
                }
            }
        },
        "/v1/chat/create-chat-private": {
            "post": {
                "description": "Create a chat private both user",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Chat"
                ],
                "summary": "Create a chat private",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Authorization Bearer token",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    },
                    {
                        "description": "payload",
                        "name": "payload",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/model.CreateChatPrivateInput"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.ResponseData"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/response.ErrResponseData"
                        }
                    }
                }
            }
        },
        "/v1/chat/del-chat": {
            "post": {
                "description": "Delete chat by admin group chat",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Chat"
                ],
                "summary": "Delete chat",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Authorization Bearer token",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    },
                    {
                        "description": "payload",
                        "name": "payload",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/model.DelChatInput"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.ResponseData"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/response.ErrResponseData"
                        }
                    }
                }
            }
        },
        "/v1/chat/del-men-from-chat": {
            "post": {
                "description": "Delete member from chat by admin group chat",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Chat"
                ],
                "summary": "Delete member from chat",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Authorization Bearer token",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    },
                    {
                        "description": "payload",
                        "name": "payload",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/model.DelMenForChatInput"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.ResponseData"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/response.ErrResponseData"
                        }
                    }
                }
            }
        },
        "/v1/chat/get-chat-info": {
            "get": {
                "description": "Get chat information by chat id",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Chat"
                ],
                "summary": "Get chat information",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Authorization Bearer token",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Chat ID",
                        "name": "chat_id",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.ResponseData"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/response.ErrResponseData"
                        }
                    }
                }
            }
        },
        "/v1/chat/get-list-chat-for-user": {
            "get": {
                "description": "Get list chat from user",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Chat"
                ],
                "summary": "Get list of chat",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Authorization Bearer token",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "limit number of chat",
                        "name": "limit",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "page number",
                        "name": "page",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.ResponseData"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/response.ErrResponseData"
                        }
                    }
                }
            }
        },
        "/v1/chat/get-user-in-chat": {
            "get": {
                "description": "Get information user in chat with chat id",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Chat"
                ],
                "summary": "Hanlde get infomation user in chat",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Authorization Bearer token",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Chat ID",
                        "name": "chat_id",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "limit number of chat",
                        "name": "limit",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "page number",
                        "name": "page",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.ResponseData"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/response.ErrResponseData"
                        }
                    }
                }
            }
        },
        "/v1/chat/upgrade-chat-info": {
            "post": {
                "description": "Update chat info by admin group chat",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Chat"
                ],
                "summary": "Update chat info",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Authorization Bearer token",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    },
                    {
                        "description": "payload",
                        "name": "payload",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/model.UpgradeChatInfoInput"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.ResponseData"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/response.ErrResponseData"
                        }
                    }
                }
            }
        },
        "/v1/token/create_refresh_token": {
            "post": {
                "description": "Testing create a new refresh JWT token",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Token"
                ],
                "summary": "Create a new JWT token test",
                "parameters": [
                    {
                        "description": "payload",
                        "name": "payload",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/model.JwtInput"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.ResponseData"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/response.ErrResponseData"
                        }
                    }
                }
            }
        },
        "/v1/token/create_token": {
            "post": {
                "description": "Testing create a new JWT token",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Token"
                ],
                "summary": "Create a new JWT token test",
                "parameters": [
                    {
                        "description": "payload",
                        "name": "payload",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/model.JwtInput"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.ResponseData"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/response.ErrResponseData"
                        }
                    }
                }
            }
        },
        "/v1/token/valid_token": {
            "post": {
                "description": "Validate token for access token and refresh token",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Token"
                ],
                "summary": "Validate token for access token and refresh token",
                "parameters": [
                    {
                        "description": "payload",
                        "name": "payload",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/model.JwtInput"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.ResponseData"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/response.ErrResponseData"
                        }
                    }
                }
            }
        },
        "/v1/user/accept_friend_request": {
            "post": {
                "description": "Accept friend request from another user",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "User Info"
                ],
                "summary": "Accept friend request",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Bearer token",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    },
                    {
                        "description": "Accept friend request",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/model.AcceptFriendRequestInput"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.ResponseData"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/response.ErrResponseData"
                        }
                    }
                }
            }
        },
        "/v1/user/create_friend_request": {
            "post": {
                "description": "Create friend request to another user",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "User Info"
                ],
                "summary": "Create friend request",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Bearer token",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    },
                    {
                        "description": "Create friend request",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/model.CreateFriendRequestInput"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.ResponseData"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/response.ErrResponseData"
                        }
                    }
                }
            }
        },
        "/v1/user/end_friend_request": {
            "post": {
                "description": "End friend request to another user",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "User Info"
                ],
                "summary": "End friend request",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Bearer token",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    },
                    {
                        "description": "End friend request",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/model.EndFriendRequestInput"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.ResponseData"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/response.ErrResponseData"
                        }
                    }
                }
            }
        },
        "/v1/user/find_user": {
            "get": {
                "description": "Find a user by mail address",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "User Info"
                ],
                "summary": "Find user",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Bearer token",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Email address",
                        "name": "email",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.ResponseData"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/response.ErrResponseData"
                        }
                    }
                }
            }
        },
        "/v1/user/get_user_info": {
            "get": {
                "description": "Get user information after login",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "User Info"
                ],
                "summary": "Get user info",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Bearer token",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.ResponseData"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/response.ErrResponseData"
                        }
                    }
                }
            }
        },
        "/v1/user/login": {
            "post": {
                "description": "Login user by account and password",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "accounts management"
                ],
                "summary": "Login user",
                "parameters": [
                    {
                        "description": "payload",
                        "name": "payload",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/model.LoginInput"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.ResponseData"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/response.ErrResponseData"
                        }
                    }
                }
            }
        },
        "/v1/user/register": {
            "post": {
                "description": "When user register, system will send OTP to user's phone number or email address",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "accounts management"
                ],
                "summary": "Register a new account",
                "parameters": [
                    {
                        "description": "payload",
                        "name": "payload",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/model.RegisterInput"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.ResponseData"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/response.ErrResponseData"
                        }
                    }
                }
            }
        },
        "/v1/user/reject_friend_request": {
            "post": {
                "description": "Reject friend request from another user",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "User Info"
                ],
                "summary": "Reject friend request",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Bearer token",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    },
                    {
                        "description": "request id",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/model.RejectFriendRequestInput"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.ResponseData"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/response.ErrResponseData"
                        }
                    }
                }
            }
        },
        "/v1/user/update_user_info": {
            "post": {
                "description": "Update nick name, ... information user",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "User Info"
                ],
                "summary": "Update user info",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Bearer token",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    },
                    {
                        "description": "Update user info",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/model.UpdateUserInfoInput"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.ResponseData"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/response.ErrResponseData"
                        }
                    }
                }
            }
        },
        "/v1/user/upgrade_password_register": {
            "post": {
                "description": "after verification otp can be updated password",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "accounts management"
                ],
                "summary": "update password when register",
                "parameters": [
                    {
                        "description": "payload",
                        "name": "payload",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/model.UpdatePasswordInput"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.ResponseData"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/response.ErrResponseData"
                        }
                    }
                }
            }
        },
        "/v1/user/verify_account": {
            "post": {
                "description": "Verify OTP bu user when register",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "accounts management"
                ],
                "summary": "Verify OTP bu user when register",
                "parameters": [
                    {
                        "description": "payload",
                        "name": "payload",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/model.VerifyInput"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.ResponseData"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/response.ErrResponseData"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "model.AcceptFriendRequestInput": {
            "type": "object",
            "properties": {
                "request_id": {
                    "type": "string"
                },
                "user_accept_id": {
                    "type": "string"
                }
            }
        },
        "model.AddMemberToChatInput": {
            "type": "object",
            "properties": {
                "admin_chat_id": {
                    "type": "string"
                },
                "chat_id": {
                    "type": "string"
                },
                "user_add_id": {
                    "type": "string"
                }
            }
        },
        "model.ChangeAdminGroupChatInput": {
            "type": "object",
            "properties": {
                "group_chat_id": {
                    "type": "string"
                },
                "new_admin_id": {
                    "type": "string"
                },
                "old_admin_id": {
                    "type": "string"
                }
            }
        },
        "model.CreateChatGroupInput": {
            "type": "object",
            "properties": {
                "group_name": {
                    "type": "string"
                },
                "list_id": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "user_id_create": {
                    "type": "string"
                }
            }
        },
        "model.CreateChatPrivateInput": {
            "type": "object",
            "properties": {
                "user1": {
                    "type": "string"
                },
                "user2": {
                    "type": "string"
                }
            }
        },
        "model.CreateFriendRequestInput": {
            "type": "object",
            "properties": {
                "email_friend": {
                    "type": "string"
                },
                "user_id": {
                    "type": "string"
                }
            }
        },
        "model.DelChatInput": {
            "type": "object",
            "properties": {
                "admin_chat_id": {
                    "type": "string"
                },
                "chat_id": {
                    "type": "string"
                }
            }
        },
        "model.DelMenForChatInput": {
            "type": "object",
            "properties": {
                "admin_chat_id": {
                    "type": "string"
                },
                "chat_id": {
                    "type": "string"
                },
                "user_del_id": {
                    "type": "string"
                }
            }
        },
        "model.EndFriendRequestInput": {
            "type": "object",
            "properties": {
                "request_id": {
                    "type": "string"
                },
                "user_id": {
                    "type": "string"
                }
            }
        },
        "model.JwtInput": {
            "type": "object",
            "properties": {
                "data": {
                    "type": "string"
                }
            }
        },
        "model.LoginInput": {
            "type": "object",
            "properties": {
                "user_account": {
                    "type": "string"
                },
                "user_password": {
                    "type": "string"
                }
            }
        },
        "model.RegisterInput": {
            "type": "object",
            "properties": {
                "verify_key": {
                    "type": "string"
                },
                "verify_purpose": {
                    "type": "string"
                },
                "verify_type": {
                    "type": "integer"
                }
            }
        },
        "model.RejectFriendRequestInput": {
            "type": "object",
            "properties": {
                "request_id": {
                    "type": "string"
                },
                "user_accept_id": {
                    "type": "string"
                }
            }
        },
        "model.UpdatePasswordInput": {
            "type": "object",
            "properties": {
                "password": {
                    "type": "string"
                },
                "token": {
                    "type": "string"
                }
            }
        },
        "model.UpdateUserInfoInput": {
            "type": "object",
            "properties": {
                "user_avatar": {
                    "type": "string"
                },
                "user_id": {
                    "type": "string"
                },
                "user_nickname": {
                    "type": "string"
                }
            }
        },
        "model.UpgradeChatInfoInput": {
            "type": "object",
            "properties": {
                "group_avatar": {
                    "type": "string"
                },
                "group_chat_id": {
                    "type": "string"
                },
                "group_name_update": {
                    "type": "string"
                },
                "user_admin_id": {
                    "type": "string"
                }
            }
        },
        "model.VerifyInput": {
            "type": "object",
            "properties": {
                "verify_code": {
                    "type": "string"
                },
                "verify_key": {
                    "type": "string"
                }
            }
        },
        "response.ErrResponseData": {
            "type": "object",
            "properties": {
                "code": {
                    "description": "Ma status code",
                    "type": "integer"
                },
                "detail": {
                    "description": "Thong bao loi"
                },
                "error": {
                    "type": "string"
                }
            }
        },
        "response.ResponseData": {
            "type": "object",
            "properties": {
                "code": {
                    "description": "Ma status code",
                    "type": "integer"
                },
                "data": {
                    "description": "Du lieu duoc return"
                },
                "message": {
                    "description": "Thong bao loi",
                    "type": "string"
                }
            }
        }
    },
    "securityDefinitions": {
        "BasicAuth": {
            "type": "basic"
        }
    },
    "externalDocs": {
        "description": "OpenAPI",
        "url": "https://swagger.io/resources/open-api/"
    }
}